$date
	Sat Nov 16 19:21:34 2024
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module ex_tb $end
$var wire 2 ! select_mux_4_out [1:0] $end
$var wire 2 " select_mux_2_out [1:0] $end
$var wire 1 # reg_file_write_out $end
$var wire 32 $ reg_b_out [31:0] $end
$var wire 1 % mem_we_out $end
$var wire 1 & mem_re_out $end
$var wire 1 ' branch_out $end
$var wire 32 ( alu_out [31:0] $end
$var wire 32 ) add_pc_out [31:0] $end
$var reg 2 * alu_op [1:0] $end
$var reg 1 + clk $end
$var reg 7 , funct7e3 [6:0] $end
$var reg 32 - immediate_in [31:0] $end
$var reg 1 . mem_re_in $end
$var reg 1 / mem_we_in $end
$var reg 32 0 pc_in [31:0] $end
$var reg 1 1 reg_file_write_in $end
$var reg 32 2 reg_in_a [31:0] $end
$var reg 32 3 reg_in_b [31:0] $end
$var reg 1 4 reset $end
$var reg 2 5 select_mux_1 [1:0] $end
$var reg 2 6 select_mux_2_in [1:0] $end
$var reg 2 7 select_mux_4_in [1:0] $end
$scope module uut $end
$var wire 2 8 alu_op [1:0] $end
$var wire 1 + clk $end
$var wire 7 9 funct7e3 [6:0] $end
$var wire 32 : immediate_in [31:0] $end
$var wire 1 . mem_re_in $end
$var wire 1 / mem_we_in $end
$var wire 32 ; pc_in [31:0] $end
$var wire 1 1 reg_file_write_in $end
$var wire 32 < reg_in_a [31:0] $end
$var wire 32 = reg_in_b [31:0] $end
$var wire 1 4 reset $end
$var wire 2 > select_mux_1 [1:0] $end
$var wire 2 ? select_mux_2_in [1:0] $end
$var wire 2 @ select_mux_4_in [1:0] $end
$var wire 2 A select_mux_4_out [1:0] $end
$var wire 2 B select_mux_2_out [1:0] $end
$var wire 1 # reg_file_write_out $end
$var wire 32 C reg_b_out [31:0] $end
$var wire 3 D op [2:0] $end
$var wire 32 E mux_1_out [31:0] $end
$var wire 1 % mem_we_out $end
$var wire 1 & mem_re_out $end
$var wire 4 F flags [3:0] $end
$var wire 1 ' branch_out $end
$var wire 1 G branch_in $end
$var wire 32 H alu_out [31:0] $end
$var wire 32 I alu_in [31:0] $end
$var wire 32 J add_pc_out [31:0] $end
$var wire 32 K add_pc_in [31:0] $end
$scope module ADD_BRANCH $end
$var wire 32 L A [31:0] $end
$var wire 32 M B [31:0] $end
$var wire 1 N carryOut $end
$var wire 1 O op $end
$var wire 33 P result [32:0] $end
$var wire 32 Q R [31:0] $end
$upscope $end
$scope module ALU_DP $end
$var wire 32 R A [31:0] $end
$var wire 32 S resultXor [31:0] $end
$var wire 32 T resultOr [31:0] $end
$var wire 32 U resultAnd [31:0] $end
$var wire 32 V resultAddSub [31:0] $end
$var wire 1 W opAddSub $end
$var wire 3 X op [2:0] $end
$var wire 1 Y lt $end
$var wire 1 Z gt $end
$var wire 4 [ flags [3:0] $end
$var wire 1 \ eq $end
$var wire 32 ] R [31:0] $end
$var wire 32 ^ B [31:0] $end
$scope module AND $end
$var wire 32 _ A [31:0] $end
$var wire 32 ` R [31:0] $end
$var wire 32 a B [31:0] $end
$upscope $end
$scope module ARITHMETIC $end
$var wire 32 b A [31:0] $end
$var wire 1 W op $end
$var wire 33 c result [32:0] $end
$var wire 1 d carryOut $end
$var wire 32 e R [31:0] $end
$var wire 32 f B [31:0] $end
$upscope $end
$scope module LOGIC $end
$var wire 32 g A [31:0] $end
$var wire 1 Y lt $end
$var wire 1 Z gt $end
$var wire 1 \ eq $end
$var wire 32 h B [31:0] $end
$upscope $end
$scope module OR $end
$var wire 32 i A [31:0] $end
$var wire 32 j R [31:0] $end
$var wire 32 k B [31:0] $end
$upscope $end
$scope module XOR $end
$var wire 32 l A [31:0] $end
$var wire 32 m R [31:0] $end
$var wire 32 n B [31:0] $end
$upscope $end
$upscope $end
$scope module ALU_UC $end
$var wire 2 o aluOp [1:0] $end
$var wire 1 + clk $end
$var wire 4 p flags [3:0] $end
$var wire 7 q funct7e3 [6:0] $end
$var wire 1 G branch $end
$var parameter 3 r _and $end
$var parameter 3 s _or $end
$var parameter 3 t _xor $end
$var parameter 3 u add $end
$var parameter 3 v sub $end
$var reg 3 w op [2:0] $end
$upscope $end
$scope module EX_MEM_REG $end
$var wire 32 x add_pc_in [31:0] $end
$var wire 32 y alu_in [31:0] $end
$var wire 1 G branch_in $end
$var wire 1 + clk $end
$var wire 1 . mem_re_in $end
$var wire 1 / mem_we_in $end
$var wire 32 z reg_b_in [31:0] $end
$var wire 1 1 reg_file_write_in $end
$var wire 1 4 reset $end
$var wire 2 { select_mux_2_in [1:0] $end
$var wire 2 | select_mux_4_in [1:0] $end
$var reg 32 } add_pc_out [31:0] $end
$var reg 32 ~ alu_out [31:0] $end
$var reg 1 ' branch_out $end
$var reg 1 & mem_re_out $end
$var reg 1 % mem_we_out $end
$var reg 32 !" reg_b_out [31:0] $end
$var reg 1 # reg_file_write_out $end
$var reg 2 "" select_mux_2_out [1:0] $end
$var reg 2 #" select_mux_4_out [1:0] $end
$upscope $end
$scope module MUX_1 $end
$var wire 32 $" D0 [31:0] $end
$var wire 32 %" D1 [31:0] $end
$var wire 32 &" D2 [31:0] $end
$var wire 32 '" D3 [31:0] $end
$var wire 2 (" select [1:0] $end
$var wire 32 )" out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 v
b0 u
b100 t
b11 s
b10 r
$end
#0
$dumpvars
b0 )"
b0 ("
b0 '"
b0 &"
b100 %"
b0 $"
b0 #"
b0 ""
b0 !"
b0 ~
b0 }
b0 |
b0 {
b0 z
b0 y
b1000000000100 x
b0 w
b0 q
b10 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
0d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
1\
b10 [
0Z
0Y
b0 X
0W
b0 V
b0 U
b0 T
b0 S
b0 R
b1000000000100 Q
b1000000000100 P
0O
0N
b1000000000000 M
b100 L
b1000000000100 K
b0 J
b0 I
b0 H
1G
b10 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b1000000000000 ;
b100 :
b0 9
b0 8
b0 7
b0 6
b0 5
14
b0 3
b0 2
01
b1000000000000 0
0/
0.
b100 -
b0 ,
0+
b0 *
b0 )
b0 (
0'
0&
0%
b0 $
0#
b0 "
b0 !
$end
#500
1+
#1000
b11 I
b11 ]
b11 y
0G
b11 V
b11 e
1Y
b10 E
b10 ^
b10 a
b10 f
b10 h
b10 k
b10 n
b10 )"
b11 c
b11 T
b11 j
b11 S
b11 m
0+
b10 3
b10 =
b10 z
b10 $"
0\
b101 F
b101 [
b101 p
0Z
b1 2
b1 <
b1 R
b1 _
b1 b
b1 g
b1 i
b1 l
04
#1500
b1000000000100 )
b1000000000100 J
b1000000000100 }
b11 (
b11 H
b11 ~
b10 $
b10 C
b10 !"
1+
#2000
0+
#2500
1+
#3000
0+
#3500
1+
#4000
0+
#4500
1+
#5000
0+
#5500
1+
#6000
0+
#6500
1+
#7000
0+
#7500
1+
#8000
0+
#8500
1+
#9000
0+
#9500
1+
#10000
0+
#10500
1+
#11000
b100101 I
b100101 ]
b100101 y
b1000000010000 K
b1000000010000 Q
b1000000010000 x
b100101 V
b100101 e
b1000000010000 P
b10000 U
b10000 `
b100101 c
b10101 T
b10101 j
b101 S
b101 m
b10000 E
b10000 ^
b10000 a
b10000 f
b10000 h
b10000 k
b10000 n
b10000 )"
0+
b10000 -
b10000 :
b10000 L
b10000 %"
0Y
b1001 F
b1001 [
b1001 p
1Z
b10101 2
b10101 <
b10101 R
b10101 _
b10101 b
b10101 g
b10101 i
b10101 l
bx000 ,
bx000 9
bx000 q
b1 5
b1 >
b1 ("
b1 *
b1 8
b1 o
#11500
b1000000010000 )
b1000000010000 J
b1000000010000 }
b100101 (
b100101 H
b100101 ~
1+
#12000
0+
#12500
1+
#13000
0+
#13500
1+
#14000
0+
#14500
1+
#15000
0+
#15500
1+
#16000
0+
#16500
1+
#17000
0+
#17500
1+
#18000
0+
#18500
1+
#19000
0+
#19500
1+
#20000
0+
#20500
1+
#21000
1W
b1 D
b1 X
b1 w
b100000 I
b100000 ]
b100000 y
b100000 V
b100000 e
b100000 c
b110000 T
b110000 j
b100000 S
b100000 m
0+
b10000 3
b10000 =
b10000 z
b10000 $"
b110000 2
b110000 <
b110000 R
b110000 _
b110000 b
b110000 g
b110000 i
b110000 l
b100000 ,
b100000 9
b100000 q
b0 5
b0 >
b0 ("
b10 *
b10 8
b10 o
#21500
b100000 (
b100000 H
b100000 ~
b10000 $
b10000 C
b10000 !"
1+
#22000
0+
#22500
1+
#23000
0+
#23500
1+
#24000
0+
#24500
1+
#25000
0+
#25500
1+
#26000
0+
#26500
1+
#27000
0+
#27500
1+
#28000
0+
#28500
1+
#29000
0+
#29500
1+
#30000
0+
#30500
1+
#31000
0W
b10 D
b10 X
b10 w
b0 I
b0 ]
b0 y
b0 U
b0 `
b11111111111111111111111111111111 V
b11111111111111111111111111111111 e
b1111000011110000111100001111 E
b1111000011110000111100001111 ^
b1111000011110000111100001111 a
b1111000011110000111100001111 f
b1111000011110000111100001111 h
b1111000011110000111100001111 k
b1111000011110000111100001111 n
b1111000011110000111100001111 )"
b11111111111111111111111111111111 c
b11111111111111111111111111111111 T
b11111111111111111111111111111111 j
b11111111111111111111111111111111 S
b11111111111111111111111111111111 m
0+
b1111000011110000111100001111 3
b1111000011110000111100001111 =
b1111000011110000111100001111 z
b1111000011110000111100001111 $"
b11110000111100001111000011110000 2
b11110000111100001111000011110000 <
b11110000111100001111000011110000 R
b11110000111100001111000011110000 _
b11110000111100001111000011110000 b
b11110000111100001111000011110000 g
b11110000111100001111000011110000 i
b11110000111100001111000011110000 l
bx111 ,
bx111 9
bx111 q
#31500
b0 (
b0 H
b0 ~
b1111000011110000111100001111 $
b1111000011110000111100001111 C
b1111000011110000111100001111 !"
1+
#32000
0+
#32500
1+
#33000
0+
#33500
1+
#34000
0+
#34500
1+
#35000
0+
#35500
1+
#36000
0+
#36500
1+
#37000
0+
#37500
1+
#38000
0+
#38500
1+
#39000
0+
#39500
1+
#40000
0+
#40500
1+
#41000
1W
b11 D
b11 X
b11 w
b11111111111111111111111111111111 I
b11111111111111111111111111111111 ]
b11111111111111111111111111111111 y
b1010100101010110101010010101011 V
b1010100101010110101010010101011 e
b1010101101010100101010110101010 E
b1010101101010100101010110101010 ^
b1010101101010100101010110101010 a
b1010101101010100101010110101010 f
b1010101101010100101010110101010 h
b1010101101010100101010110101010 k
b1010101101010100101010110101010 n
b1010101101010100101010110101010 )"
b0 U
b0 `
b1010100101010110101010010101011 c
b11111111111111111111111111111111 T
b11111111111111111111111111111111 j
b11111111111111111111111111111111 S
b11111111111111111111111111111111 m
0+
b1010101101010100101010110101010 3
b1010101101010100101010110101010 =
b1010101101010100101010110101010 z
b1010101101010100101010110101010 $"
b10101010010101011010101001010101 2
b10101010010101011010101001010101 <
b10101010010101011010101001010101 R
b10101010010101011010101001010101 _
b10101010010101011010101001010101 b
b10101010010101011010101001010101 g
b10101010010101011010101001010101 i
b10101010010101011010101001010101 l
bx110 ,
bx110 9
bx110 q
#41500
b11111111111111111111111111111111 (
b11111111111111111111111111111111 H
b11111111111111111111111111111111 ~
b1010101101010100101010110101010 $
b1010101101010100101010110101010 C
b1010101101010100101010110101010 !"
1+
#42000
0+
#42500
1+
#43000
0+
#43500
1+
#44000
0+
#44500
1+
#45000
0+
#45500
1+
#46000
0+
#46500
1+
#47000
0+
#47500
1+
#48000
0+
#48500
1+
#49000
0+
#49500
1+
#50000
0+
#50500
1+
#51000
0W
b100 D
b100 X
b100 w
b10010101010100010001010101011001 I
b10010101010100010001010101011001 ]
b10010101010100010001010101011001 y
1G
0d
b10011001100110011001100110011001 V
b10011001100110011001100110011001 e
b10000111011001010100001100100001 E
b10000111011001010100001100100001 ^
b10000111011001010100001100100001 a
b10000111011001010100001100100001 f
b10000111011001010100001100100001 h
b10000111011001010100001100100001 k
b10000111011001010100001100100001 n
b10000111011001010100001100100001 )"
b10001001000100001000100000 U
b10001001000100001000100000 `
b10011001100110011001100110011001 c
b10010111011101010101011101111001 T
b10010111011101010101011101111001 j
b10010101010100010001010101011001 S
b10010101010100010001010101011001 m
0+
b10000111011001010100001100100001 3
b10000111011001010100001100100001 =
b10000111011001010100001100100001 z
b10000111011001010100001100100001 $"
1Y
b101 F
b101 [
b101 p
0Z
b10010001101000101011001111000 2
b10010001101000101011001111000 <
b10010001101000101011001111000 R
b10010001101000101011001111000 _
b10010001101000101011001111000 b
b10010001101000101011001111000 g
b10010001101000101011001111000 i
b10010001101000101011001111000 l
bx100 ,
bx100 9
bx100 q
#51500
b10010101010100010001010101011001 (
b10010101010100010001010101011001 H
b10010101010100010001010101011001 ~
b10000111011001010100001100100001 $
b10000111011001010100001100100001 C
b10000111011001010100001100100001 !"
1'
1+
#52000
0+
#52500
1+
#53000
0+
#53500
1+
#54000
0+
#54500
1+
#55000
0+
#55500
1+
#56000
0+
#56500
1+
#57000
0+
#57500
1+
#58000
0+
#58500
1+
#59000
0+
#59500
1+
#60000
0+
#60500
1+
#61000
b0 D
b0 X
b0 w
b11 I
b11 ]
b11 y
b11 V
b11 e
b10 E
b10 ^
b10 a
b10 f
b10 h
b10 k
b10 n
b10 )"
b0 U
b0 `
b11 c
b11 T
b11 j
b11 S
b11 m
0+
b10 3
b10 =
b10 z
b10 $"
b1 2
b1 <
b1 R
b1 _
b1 b
b1 g
b1 i
b1 l
bx001 ,
bx001 9
bx001 q
#61500
b11 (
b11 H
b11 ~
b10 $
b10 C
b10 !"
1+
#62000
0+
#62500
1+
#63000
0+
#63500
1+
#64000
0+
#64500
1+
#65000
0+
#65500
1+
#66000
0+
#66500
1+
#67000
0+
#67500
1+
#68000
0+
#68500
1+
#69000
0+
#69500
1+
#70000
0+
#70500
1+
#71000
b110 I
b110 ]
b110 y
b110 V
b110 e
1G
1\
b11 E
b11 ^
b11 a
b11 f
b11 h
b11 k
b11 n
b11 )"
b11 U
b11 `
b110 c
b0 S
b0 m
0+
b11 3
b11 =
b11 z
b11 $"
0Y
b10 F
b10 [
b10 p
0Z
b11 2
b11 <
b11 R
b11 _
b11 b
b11 g
b11 i
b11 l
bx000 ,
bx000 9
bx000 q
#71500
b110 (
b110 H
b110 ~
b11 $
b11 C
b11 !"
1+
#72000
0+
#72500
1+
#73000
0+
#73500
1+
#74000
0+
#74500
1+
#75000
0+
#75500
1+
#76000
0+
#76500
1+
#77000
0+
#77500
1+
#78000
0+
#78500
1+
#79000
0+
#79500
1+
#80000
0+
#80500
1+
#81000
0+
#81500
1+
#82000
0+
#82500
1+
#83000
0+
#83500
1+
#84000
0+
#84500
1+
#85000
0+
#85500
1+
#86000
0+
